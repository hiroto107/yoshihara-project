import { S as SendMessageResponse, k as SendStreamingMessageResponse, h as GetTaskResponse, C as CancelTaskResponse, e as SetTaskPushNotificationConfigResponse, G as GetTaskPushNotificationConfigResponse, i as JSONRPCErrorResponse } from './types-CcBgkR2G.js';
export { l as A2AError, m as A2ARequest, a0 as APIKeySecurityScheme, a1 as AgentCapabilities, a3 as AgentCapabilities1, A as AgentCard, a2 as AgentExtension, a4 as AgentProvider, ae as AgentProvider1, ad as AgentSkill, af as Artifact, ay as Artifact1, a8 as AuthorizationCodeOAuthFlow, ag as AuthorizationCodeOAuthFlow1, V as CancelTaskRequest, ah as CancelTaskSuccessResponse, a9 as ClientCredentialsOAuthFlow, al as ClientCredentialsOAuthFlow1, x as ContentTypeNotSupportedError, N as DataPart, am as FileBase, H as FilePart, K as FileWithBytes, L as FileWithUri, Y as GetTaskPushNotificationConfigRequest, an as GetTaskPushNotificationConfigSuccessResponse, R as GetTaskRequest, ap as GetTaskSuccessResponse, a5 as HTTPAuthSecurityScheme, aa as ImplicitOAuthFlow, ar as ImplicitOAuthFlow1, t as InternalError, y as InvalidAgentResponseError, s as InvalidParamsError, I as InvalidRequestError, q as JSONParseError, j as JSONRPCError, as as JSONRPCMessage, at as JSONRPCRequest, J as JSONRPCResponse, aB as JSONRPCSuccessResponse, a as Message, ai as Message1, ak as Message2, B as MessageSendConfiguration, aC as MessageSendConfiguration1, M as MessageSendParams, Q as MessageSendParams1, aD as MessageSendParams2, r as MethodNotFoundError, p as MySchema, a6 as OAuth2SecurityScheme, a7 as OAuthFlows, aE as OAuthFlows1, ac as OpenIdConnectSecurityScheme, P as Part, aF as PartBase, ab as PasswordOAuthFlow, aG as PasswordOAuthFlow1, E as PushNotificationAuthenticationInfo, D as PushNotificationConfig, X as PushNotificationConfig1, aH as PushNotificationConfig2, w as PushNotificationNotSupportedError, n as SecurityScheme, aI as SecuritySchemeBase, z as SendMessageRequest, au as SendMessageSuccessResponse, O as SendStreamingMessageRequest, aw as SendStreamingMessageSuccessResponse, W as SetTaskPushNotificationConfigRequest, az as SetTaskPushNotificationConfigSuccessResponse, T as Task, aq as Task1, av as Task2, c as TaskArtifactUpdateEvent, f as TaskIdParams, Z as TaskIdParams1, $ as TaskIdParams2, aJ as TaskIdParams3, v as TaskNotCancelableError, u as TaskNotFoundError, d as TaskPushNotificationConfig, ao as TaskPushNotificationConfig1, aA as TaskPushNotificationConfig2, aK as TaskPushNotificationConfig3, g as TaskQueryParams, aL as TaskQueryParams1, _ as TaskResubscriptionRequest, o as TaskState, aj as TaskStatus, ax as TaskStatus1, aM as TaskStatus2, b as TaskStatusUpdateEvent, F as TextPart, U as UnsupportedOperationError } from './types-CcBgkR2G.js';

/**
 * Represents any valid JSON-RPC response defined in the A2A protocol.
 */
type A2AResponse = SendMessageResponse | SendStreamingMessageResponse | GetTaskResponse | CancelTaskResponse | SetTaskPushNotificationConfigResponse | GetTaskPushNotificationConfigResponse | JSONRPCErrorResponse;

export { type A2AResponse, CancelTaskResponse, GetTaskPushNotificationConfigResponse, GetTaskResponse, JSONRPCErrorResponse, SendMessageResponse, SendStreamingMessageResponse, SetTaskPushNotificationConfigResponse };
