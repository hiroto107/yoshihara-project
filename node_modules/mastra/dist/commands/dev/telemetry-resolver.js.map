{"version":3,"sources":["../../../src/commands/dev/telemetry-resolver.ts"],"names":[],"mappings":";AAEA,eAAsB,OAAA,CACpB,SAAA,EACA,OAAA,EACA,WAAA,EACA;AACA,EAAA,IAAI,CAAC,SAAA,CAAU,UAAA,CAAW,gBAAgB,CAAA,EAAG;AAC3C,IAAA,OAAO,WAAA,CAAY,WAAW,OAAO,CAAA;AAAA,EACvC;AAEA,EAAA,IAAI,CAAC,OAAA,CAAQ,SAAA,EAAW,QAAA,CAAS,qBAAqB,CAAA,EAAG;AACvD,IAAA,OAAO,WAAA,CAAY,WAAW,OAAO,CAAA;AAAA,EACvC;AAEA,EAAA,OAAO,YAAY,SAAA,EAAW;AAAA,IAC5B,GAAG,OAAA;AAAA,IACH,WAAW,MAAA,CAAA,IAAA,CAAY;AAAA,GACxB,CAAA;AACH","file":"telemetry-resolver.js","sourcesContent":["import type { ResolveHookContext } from 'node:module';\n\nexport async function resolve(\n  specifier: string,\n  context: ResolveHookContext,\n  nextResolve: (specifier: string, context: ResolveHookContext) => Promise<{ url: string }>,\n) {\n  if (!specifier.startsWith('@opentelemetry')) {\n    return nextResolve(specifier, context);\n  }\n\n  if (!context.parentURL?.endsWith('instrumentation.mjs')) {\n    return nextResolve(specifier, context);\n  }\n\n  return nextResolve(specifier, {\n    ...context,\n    parentURL: import.meta.url,\n  });\n}\n"]}