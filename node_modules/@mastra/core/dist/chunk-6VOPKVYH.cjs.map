{"version":3,"sources":["../src/base.ts"],"names":["RegisteredLogger","ConsoleLogger"],"mappings":";;;;;AAMO,IAAM,aAAN,MAAiB;AAAA,EACtB,YAA8BA,kCAAA,CAAiB,GAAA;AAAA,EACrC,MAAA;AAAA,EACV,IAAA;AAAA,EACA,SAAA;AAAA,EAEA,WAAA,CAAY,EAAE,SAAA,EAAW,IAAA,EAAK,EAAoD;AAChF,IAAA,IAAA,CAAK,SAAA,GAAY,aAAaA,kCAAA,CAAiB,GAAA;AAC/C,IAAA,IAAA,CAAK,IAAA,GAAO,IAAA;AACZ,IAAA,IAAA,CAAK,MAAA,GAAS,IAAIC,+BAAA,CAAc,EAAE,IAAA,EAAM,CAAA,EAAG,IAAA,CAAK,SAAS,CAAA,GAAA,EAAM,IAAA,CAAK,IAAI,CAAA,CAAA,EAAI,CAAA;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,MAAA,EAAuB;AACjC,IAAA,IAAA,CAAK,MAAA,GAAS,MAAA;AAEd,IAAA,IAAI,IAAA,CAAK,SAAA,KAAcD,kCAAA,CAAiB,GAAA,EAAK;AAC3C,MAAA,IAAA,CAAK,MAAA,CAAO,MAAM,CAAA,0BAAA,EAA6B,IAAA,CAAK,SAAS,CAAA,QAAA,EAAW,IAAA,CAAK,IAAI,CAAA,CAAA,CAAG,CAAA;AAAA,IACtF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,SAAA,EAAsB;AACnC,IAAA,IAAA,CAAK,SAAA,GAAY,SAAA;AAEjB,IAAA,IAAI,IAAA,CAAK,SAAA,KAAcA,kCAAA,CAAiB,GAAA,EAAK;AAC3C,MAAA,IAAA,CAAK,MAAA,CAAO,MAAM,CAAA,6BAAA,EAAgC,IAAA,CAAK,SAAS,CAAA,QAAA,EAAW,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA,CAAA,CAAG,CAAA;AAAA,IACnG;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAA,GAAiB;AACf,IAAA,OAAO,IAAA,CAAK,SAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,sBAAA,GAAyB;AAC3B,IAAA,OAAO,KAAK,SAAA,GACR;AAAA;AAAA,MAEE,MAAA,EAAQ,IAAA,CAAK,SAAA,CAAU,gBAAA,EAAiB;AAAA,MACxC,SAAA,EAAW,CAAC,CAAC,IAAA,CAAK,SAAA,CAAU;AAAA,KAC9B,GACA,MAAA;AAAA,EACN;AACF","file":"chunk-6VOPKVYH.cjs","sourcesContent":["import type { IMastraLogger } from './logger';\nimport { RegisteredLogger } from './logger/constants';\nimport { ConsoleLogger } from './logger/default-logger';\n\nimport type { Telemetry } from './telemetry';\n\nexport class MastraBase {\n  component: RegisteredLogger = RegisteredLogger.LLM;\n  protected logger: IMastraLogger;\n  name?: string;\n  telemetry?: Telemetry;\n\n  constructor({ component, name }: { component?: RegisteredLogger; name?: string }) {\n    this.component = component || RegisteredLogger.LLM;\n    this.name = name;\n    this.logger = new ConsoleLogger({ name: `${this.component} - ${this.name}` });\n  }\n\n  /**\n   * Set the logger for the agent\n   * @param logger\n   */\n  __setLogger(logger: IMastraLogger) {\n    this.logger = logger;\n\n    if (this.component !== RegisteredLogger.LLM) {\n      this.logger.debug(`Logger updated [component=${this.component}] [name=${this.name}]`);\n    }\n  }\n\n  /**\n   * Set the telemetry for the\n   * @param telemetry\n   */\n  __setTelemetry(telemetry: Telemetry) {\n    this.telemetry = telemetry;\n\n    if (this.component !== RegisteredLogger.LLM) {\n      this.logger.debug(`Telemetry updated [component=${this.component}] [name=${this.telemetry.name}]`);\n    }\n  }\n\n  /**\n   * Get the telemetry on the vector\n   * @returns telemetry\n   */\n  __getTelemetry() {\n    return this.telemetry;\n  }\n\n  /* \n    get experimental_telemetry config\n    */\n  get experimental_telemetry() {\n    return this.telemetry\n      ? {\n          // tracer: this.telemetry.tracer,\n          tracer: this.telemetry.getBaggageTracer(),\n          isEnabled: !!this.telemetry.tracer,\n        }\n      : undefined;\n  }\n}\n\nexport * from './types';\n"]}