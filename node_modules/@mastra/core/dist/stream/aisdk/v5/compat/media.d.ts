export declare const imageMediaTypeSignatures: readonly [{
    readonly mediaType: "image/gif";
    readonly bytesPrefix: readonly [71, 73, 70];
    readonly base64Prefix: "R0lG";
}, {
    readonly mediaType: "image/png";
    readonly bytesPrefix: readonly [137, 80, 78, 71];
    readonly base64Prefix: "iVBORw";
}, {
    readonly mediaType: "image/jpeg";
    readonly bytesPrefix: readonly [255, 216];
    readonly base64Prefix: "/9j/";
}, {
    readonly mediaType: "image/webp";
    readonly bytesPrefix: readonly [82, 73, 70, 70];
    readonly base64Prefix: "UklGRg";
}, {
    readonly mediaType: "image/bmp";
    readonly bytesPrefix: readonly [66, 77];
    readonly base64Prefix: "Qk";
}, {
    readonly mediaType: "image/tiff";
    readonly bytesPrefix: readonly [73, 73, 42, 0];
    readonly base64Prefix: "SUkqAA";
}, {
    readonly mediaType: "image/tiff";
    readonly bytesPrefix: readonly [77, 77, 0, 42];
    readonly base64Prefix: "TU0AKg";
}, {
    readonly mediaType: "image/avif";
    readonly bytesPrefix: readonly [0, 0, 0, 32, 102, 116, 121, 112, 97, 118, 105, 102];
    readonly base64Prefix: "AAAAIGZ0eXBhdmlm";
}, {
    readonly mediaType: "image/heic";
    readonly bytesPrefix: readonly [0, 0, 0, 32, 102, 116, 121, 112, 104, 101, 105, 99];
    readonly base64Prefix: "AAAAIGZ0eXBoZWlj";
}];
export declare const audioMediaTypeSignatures: readonly [{
    readonly mediaType: "audio/mpeg";
    readonly bytesPrefix: readonly [255, 251];
    readonly base64Prefix: "//s=";
}, {
    readonly mediaType: "audio/mpeg";
    readonly bytesPrefix: readonly [255, 250];
    readonly base64Prefix: "//o=";
}, {
    readonly mediaType: "audio/mpeg";
    readonly bytesPrefix: readonly [255, 243];
    readonly base64Prefix: "//M=";
}, {
    readonly mediaType: "audio/mpeg";
    readonly bytesPrefix: readonly [255, 242];
    readonly base64Prefix: "//I=";
}, {
    readonly mediaType: "audio/mpeg";
    readonly bytesPrefix: readonly [255, 227];
    readonly base64Prefix: "/+M=";
}, {
    readonly mediaType: "audio/mpeg";
    readonly bytesPrefix: readonly [255, 226];
    readonly base64Prefix: "/+I=";
}, {
    readonly mediaType: "audio/wav";
    readonly bytesPrefix: readonly [82, 73, 70, 70];
    readonly base64Prefix: "UklGR";
}, {
    readonly mediaType: "audio/ogg";
    readonly bytesPrefix: readonly [79, 103, 103, 83];
    readonly base64Prefix: "T2dnUw";
}, {
    readonly mediaType: "audio/flac";
    readonly bytesPrefix: readonly [102, 76, 97, 67];
    readonly base64Prefix: "ZkxhQw";
}, {
    readonly mediaType: "audio/aac";
    readonly bytesPrefix: readonly [64, 21, 0, 0];
    readonly base64Prefix: "QBUA";
}, {
    readonly mediaType: "audio/mp4";
    readonly bytesPrefix: readonly [102, 116, 121, 112];
    readonly base64Prefix: "ZnR5cA";
}, {
    readonly mediaType: "audio/webm";
    readonly bytesPrefix: readonly [26, 69, 223, 163];
    readonly base64Prefix: "GkXf";
}];
export declare function detectMediaType({ data, signatures, }: {
    data: Uint8Array | string;
    signatures: typeof audioMediaTypeSignatures | typeof imageMediaTypeSignatures;
}): (typeof signatures)[number]['mediaType'] | undefined;
//# sourceMappingURL=media.d.ts.map