import type { Context } from 'hono';
export declare function getAgentBuilderActionsHandler(c: Context): Promise<Response>;
export declare function getAgentBuilderActionByIdHandler(c: Context): Promise<Response>;
export declare function createAgentBuilderActionRunHandler(c: Context): Promise<Response>;
export declare function startAsyncAgentBuilderActionHandler(c: Context): Promise<Response>;
export declare function startAgentBuilderActionRunHandler(c: Context): Promise<Response>;
export declare function watchAgentBuilderActionHandler(c: Context): Promise<Response>;
export declare function streamAgentBuilderActionHandler(c: Context): Promise<Response>;
export declare function streamVNextAgentBuilderActionHandler(c: Context): Promise<Response>;
export declare function resumeAsyncAgentBuilderActionHandler(c: Context): Promise<Response>;
export declare function resumeAgentBuilderActionHandler(c: Context): Promise<Response>;
export declare function getAgentBuilderActionRunsHandler(c: Context): Promise<Response>;
export declare function getAgentBuilderActionRunByIdHandler(c: Context): Promise<Response>;
export declare function getAgentBuilderActionRunExecutionResultHandler(c: Context): Promise<Response>;
export declare function cancelAgentBuilderActionRunHandler(c: Context): Promise<Response>;
export declare function sendAgentBuilderActionRunEventHandler(c: Context): Promise<Response>;
//# sourceMappingURL=handlers.d.ts.map