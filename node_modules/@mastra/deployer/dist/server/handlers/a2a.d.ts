import type { Context } from 'hono';
export declare function getAgentCardByIdHandler(c: Context): Promise<Response & import("hono").TypedResponse<{
    capabilities: {
        extensions?: {
            description?: string | undefined;
            params?: {
                [x: string]: never;
            } | undefined;
            required?: boolean | undefined;
            uri: string;
        }[] | undefined;
        pushNotifications?: boolean | undefined;
        stateTransitionHistory?: boolean | undefined;
        streaming?: boolean | undefined;
    };
    defaultInputModes: string[];
    defaultOutputModes: string[];
    description: string;
    documentationUrl?: string | undefined;
    iconUrl?: string | undefined;
    name: string;
    provider?: {
        organization: string;
        url: string;
    } | undefined;
    security?: {
        [x: string]: string[];
    }[] | undefined;
    securitySchemes?: {
        [x: string]: {
            description?: string | undefined;
            in: "cookie" | "header" | "query";
            name: string;
            type: "apiKey";
        } | {
            bearerFormat?: string | undefined;
            description?: string | undefined;
            scheme: string;
            type: "http";
        } | {
            description?: string | undefined;
            flows: {
                authorizationCode?: {
                    authorizationUrl: string;
                    refreshUrl?: string | undefined;
                    scopes: {
                        [x: string]: string;
                    };
                    tokenUrl: string;
                } | undefined;
                clientCredentials?: {
                    refreshUrl?: string | undefined;
                    scopes: {
                        [x: string]: string;
                    };
                    tokenUrl: string;
                } | undefined;
                implicit?: {
                    authorizationUrl: string;
                    refreshUrl?: string | undefined;
                    scopes: {
                        [x: string]: string;
                    };
                } | undefined;
                password?: {
                    refreshUrl?: string | undefined;
                    scopes: {
                        [x: string]: string;
                    };
                    tokenUrl: string;
                } | undefined;
            };
            type: "oauth2";
        } | {
            description?: string | undefined;
            openIdConnectUrl: string;
            type: "openIdConnect";
        };
    } | undefined;
    skills: {
        description: string;
        examples?: string[] | undefined;
        id: string;
        inputModes?: string[] | undefined;
        name: string;
        outputModes?: string[] | undefined;
        tags: string[];
    }[];
    supportsAuthenticatedExtendedCard?: boolean | undefined;
    url: string;
    version: string;
}, import("hono/utils/http-status").ContentfulStatusCode, "json">>;
export declare function getAgentExecutionHandler(c: Context): Promise<Response>;
//# sourceMappingURL=a2a.d.ts.map