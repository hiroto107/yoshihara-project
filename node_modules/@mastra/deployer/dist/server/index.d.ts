import type { Mastra } from '@mastra/core/mastra';
import { RuntimeContext } from '@mastra/core/runtime-context';
import { Tool } from '@mastra/core/tools';
import { InMemoryTaskStore } from '@mastra/server/a2a/store';
import { Hono } from 'hono';
import type { ServerBundleOptions } from './types.js';
type Bindings = {};
type Variables = {
    mastra: Mastra;
    runtimeContext: RuntimeContext;
    clients: Set<{
        controller: ReadableStreamDefaultController;
    }>;
    tools: Record<string, Tool>;
    taskStore: InMemoryTaskStore;
    playground: boolean;
    isDev: boolean;
    customRouteAuthConfig?: Map<string, boolean>;
};
export declare function getToolExports(tools: Record<string, Function>[]): Record<string, Function> | undefined;
export declare function createHonoServer(mastra: Mastra, options?: ServerBundleOptions): Promise<Hono<{
    Bindings: Bindings;
    Variables: Variables;
}, import("hono/types").BlankSchema, "/">>;
export declare function createNodeServer(mastra: Mastra, options?: ServerBundleOptions): Promise<import("@hono/node-server").ServerType>;
export {};
//# sourceMappingURL=index.d.ts.map